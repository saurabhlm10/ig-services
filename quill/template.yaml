AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  quill

  Sample SAM Template for quill

Parameters:
  ENV:
    Type: String
    Description: Environment
  InvincibleUrl:
    Type: String
    Description: DB Service Url
  SQSExecutionRoleArn:
    Type: String
    Description: SQS Execution Role Arn
  QuillQueueUrl:
    Type: String

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 128

Resources:
  UploadMediaContainerCallerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: uploadMediaContainerCaller.lambdaHandler
      Runtime: nodejs16.x
      Role: !Ref SQSExecutionRoleArn
      Architectures:
        - x86_64
      MemorySize: 1024
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /upload
            Method: post
      Environment:
        Variables:
          ENV: !Ref ENV
          InvincibleUrl: !Ref InvincibleUrl
          QuillQueueUrl: !Ref QuillQueueUrl
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - functions/uploadMediaContainerCaller.ts
# Outputs:
# ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
# Find out more about other implicit resources you can reference within SAM
# https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
# HelloWorldApi:
#   Description: "API Gateway endpoint URL for Prod stage for Hello World function"
#   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
# HelloWorldFunction:
#   Description: "Hello World Lambda Function ARN"
#   Value: !GetAtt HelloWorldFunction.Arn
# HelloWorldFunctionIamRole:
#   Description: "Implicit IAM Role created for Hello World function"
#   Value: !GetAtt HelloWorldFunctionRole.Arn
